import{_ as n,c as a,d as e,o as t}from"./app-Uf8JtNJa.js";const p={};function c(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="assetmanager-使用指南" tabindex="-1"><a class="header-anchor" href="#assetmanager-使用指南"><span>AssetManager 使用指南</span></a></h1><h2 id="簡介" tabindex="-1"><a class="header-anchor" href="#簡介"><span>簡介</span></a></h2><p>本文件說明如何使用 <code>AssetManager</code> 類別來獲取和管理遊戲Asset，特別是使用 <code>GetWrappedAsset</code> 和 <code>GetWrappedAssetByAddressString</code> 方法。在 <code>AssetManager</code> 的管理下，使用這些方法可以確保Asset在需要被使用時確實地載入，以及能夠在記憶體空間有限的設備上進行動態釋放和載入，同時也提供開發者方便的interface來操作Asset。</p><h2 id="方法概述" tabindex="-1"><a class="header-anchor" href="#方法概述"><span>方法概述</span></a></h2><h3 id="getwrappedasset" tabindex="-1"><a class="header-anchor" href="#getwrappedasset"><span>GetWrappedAsset</span></a></h3><p>此方法根據指定的地址類型 <code>Address</code> 獲取 <code>AssetWrapper</code>，以確保Asset能正確加載和管理。該方法允許選擇是否手動釋放Asset。</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token return-type class-name">AssetWrapper<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">GetWrappedAsset</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">Address</span> address<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> releaseManually <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UnityEngine<span class="token punctuation">.</span>Object</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token generic-method"><span class="token function">GetOrCacheAssetWrapper</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> releaseManually<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getwrappedassetbyaddressstring" tabindex="-1"><a class="header-anchor" href="#getwrappedassetbyaddressstring"><span>GetWrappedAssetByAddressString</span></a></h3><p>此方法根據指定的地址字串 <code>string</code> 獲取 <code>AssetWrapper</code>，以確保Asset能正確加載和管理。該方法同樣允許選擇是否手動釋放Asset。</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token return-type class-name">AssetWrapper<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token generic-method"><span class="token function">GetWrappedAssetByAddressString</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> address<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">bool</span></span> releaseManually <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UnityEngine<span class="token punctuation">.</span>Object</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token generic-method"><span class="token function">GetOrCacheAssetWrapper</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> releaseManually<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用範例" tabindex="-1"><a class="header-anchor" href="#使用範例"><span>使用範例</span></a></h2><p>以下範例展示如何使用這些方法來獲取Asset並正確管理它們：</p><h3 id="取得-assetwrapper" tabindex="-1"><a class="header-anchor" href="#取得-assetwrapper"><span>取得 <code>AssetWrapper</code></span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">AssetWrapper<span class="token punctuation">&lt;</span>ShopViewImageDataAssets<span class="token punctuation">&gt;</span></span> shopViewImageDataAssets<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        shopViewImageDataAssets <span class="token operator">=</span> AssetManager<span class="token punctuation">.</span>Instance<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetWrappedAsset</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ShopViewImageDataAssets<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>AssetManager<span class="token punctuation">.</span>Address<span class="token punctuation">.</span>ShopViewImageAssets<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name"><span class="token keyword">var</span></span> asset <span class="token operator">=</span> <span class="token keyword">await</span> shopViewImageDataAssets<span class="token punctuation">.</span><span class="token function">GetAssetAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      </span>
<span class="line">        <span class="token comment">// 使用Asset</span></span>
<span class="line">        Debug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>asset<span class="token punctuation">.</span>shopViewImageDatas<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="取用asset" tabindex="-1"><a class="header-anchor" href="#取用asset"><span>取用Asset</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Sprite<span class="token punctuation">&gt;</span></span> <span class="token function">GetDefaultIconBig</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">await</span> itemViewDataAssets<span class="token punctuation">.</span><span class="token function">GetAssetAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetItemIconBigDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="註冊自定義結構" tabindex="-1"><a class="header-anchor" href="#註冊自定義結構"><span>註冊自定義結構</span></a></h3><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    serviceClient <span class="token operator">=</span> MagicOnionUtils<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IPurchaseService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">    vipExpSettings <span class="token operator">=</span> dataSystem<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetDeserializedData</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>VipExpSetting<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>dataSystem<span class="token punctuation">.</span>jsonPath<span class="token punctuation">.</span>vipExpSetting<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">    shopViewImageDataAssets <span class="token operator">=</span> AssetManager<span class="token punctuation">.</span>Instance<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetWrappedAsset</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ShopViewImageDataAssets<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>AssetManager<span class="token punctuation">.</span>Address<span class="token punctuation">.</span>ShopViewImageAssets<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    shopViewImageDataAssets<span class="token punctuation">.</span><span class="token function">RegisterCustomStructure</span><span class="token punctuation">(</span>ShopViewImageDataDictName<span class="token punctuation">,</span> asset <span class="token operator">=&gt;</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> asset<span class="token punctuation">.</span>shopViewImageDatas<span class="token punctuation">.</span><span class="token function">ToDictionary</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>viewId<span class="token punctuation">,</span> s <span class="token operator">=&gt;</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> ShopViewImageData<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetShopViewAssetDict</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>Dictionary<span class="token operator">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> ShopViewImageData<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token keyword">await</span> shopViewImageDataAssets<span class="token punctuation">.</span><span class="token function">GetCustomStructureAsync</span><span class="token punctuation">(</span>ShopViewImageDataDictName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事項" tabindex="-1"><a class="header-anchor" href="#注意事項"><span>注意事項</span></a></h2><ol><li><strong>避免自行快取 <code>GetAssetAsync</code> 的結果</strong>：除非有特別需求，否則不應將 <code>GetAssetAsync</code> 的結果存入變數。這樣能確保Asset在每次需要時都能自動加載和管理。</li><li><strong>使用 <code>RegisterCustomStructure</code> 註冊自定義結構</strong>：如果需要從Asset中提取自定義結構，可以使用 <code>RegisterCustomStructure</code> 方法。這樣AssetWrapper會在需要時動態生成並快取這些結構。</li><li><strong>釋放Asset</strong>：如果需要手動釋放Asset，請使用 <code>ReleaseAsset</code> 方法。<code>AssetWrapper</code> 會在Asset被釋放時自動清理相關資源。</li></ol><h2 id="結論" tabindex="-1"><a class="header-anchor" href="#結論"><span>結論</span></a></h2><p>透過 <code>AssetManager</code> 以及<code>AssetWrapper</code>，開發者可以方便地加載和管理遊戲中的Asset，同時確保系統資源得到有效使用。遵循以上指南以確保Asset管理的正確性和高效性。</p>`,22)]))}const i=n(p,[["render",c],["__file","feature.html.vue"]]),u=JSON.parse('{"path":"/Overview/feature.html","title":"AssetManager 使用指南","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"簡介","slug":"簡介","link":"#簡介","children":[]},{"level":2,"title":"方法概述","slug":"方法概述","link":"#方法概述","children":[{"level":3,"title":"GetWrappedAsset","slug":"getwrappedasset","link":"#getwrappedasset","children":[]},{"level":3,"title":"GetWrappedAssetByAddressString","slug":"getwrappedassetbyaddressstring","link":"#getwrappedassetbyaddressstring","children":[]}]},{"level":2,"title":"使用範例","slug":"使用範例","link":"#使用範例","children":[{"level":3,"title":"取得 AssetWrapper","slug":"取得-assetwrapper","link":"#取得-assetwrapper","children":[]},{"level":3,"title":"取用Asset","slug":"取用asset","link":"#取用asset","children":[]},{"level":3,"title":"註冊自定義結構","slug":"註冊自定義結構","link":"#註冊自定義結構","children":[]}]},{"level":2,"title":"注意事項","slug":"注意事項","link":"#注意事項","children":[]},{"level":2,"title":"結論","slug":"結論","link":"#結論","children":[]}],"git":{"updatedTime":1725861622000,"contributors":[{"name":"oldman","email":"oldman@macaca.onmicrosoft.com","commits":1}]},"filePathRelative":"Overview/feature.md"}');export{i as comp,u as data};
